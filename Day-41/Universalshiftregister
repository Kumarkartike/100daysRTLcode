module Universalshiftregister #(parameter n = 8)
(
   input [n-1:0] data_in,
   input clk, reset,
   input [1:0] control,
   output reg [n-1:0] data_out
);

   always @(posedge clk or negedge reset)
   begin
      if (reset)
         data_out <= 0;
      else
         case (control)
            2'b00: data_out <= data_out;          // hold
            2'b01: data_out <= {data_in[0], data_out[n-1:1]}; // shift_left
            2'b10: data_out <= {data_out[n-2:0], data_in[n-1]}; // shift_right
            2'b11: data_out <= data_in;           // siso
            default: data_out <= data_out;
         endcase
   end

endmodule
