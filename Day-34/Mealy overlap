module MealyOL(
                in                                    ,
                clk                                   ,
                reset                                 ,
                out                                    
                )                                     ;

input             in, clk, reset                      ;
output reg        out                                ;
parameter         S0 = 0 , S1 = 1 , S2 = 2 , S3 = 3   ;
reg         [1:0] present_state,next_state            ;

/*State S0 is assigned to present state if the reset is 1 else the next state is assigned to present state*/
always@(posedge clk or posedge reset)
   begin
      if(reset)
         present_state <= S0                          ;
      else    
         present_state <= next_state                  ;
   end             

/*Here the states S0, S1, S2, or S3 is assigned according to the input encountered (for the sequence 1101)*/
always@(present_state or in)
   begin      
     case(present_state)    
         S0 : begin
           	  	if (in)
             		next_state  = S1                    ;
           		else
             		next_state  = S0                    ;
           		out            = 0                     ;
              end
         S1 : begin 
              	if (in)
             		next_state  = S2                    ;
           		else
             		next_state  = S0                    ;
           		out            = 0                     ;
              end
         S2 : begin 
              	if (in)
                  next_state  = S2                    ;
           		else
             		next_state  = S3                    ;
           		out            = 0                     ;
              end 
         S3 : begin 
           	  	if (in)
                  begin
             		out          = 1                    ;
next_state = S1                   ;
                  end
           		else
                  begin
             		out          = 0                    ;
                    next_state = S0                   ;
                  end
              end
      endcase
   end

endmodule                                              

